pipeline {
    environment {
        AWS_DEFAULT_REGION='eu-north-1'
        NAME="shlomishalitkopstest.k8s.local"
        KOPS_STATE_BUCKET_NAME="shlomishalit-kops-state-store"
        KOPS_OIDC_BUCKET_NAME="shlomishalit-kops-oidc-store"
        KOPS_STATE_STORE="s3://${KOPS_STATE_BUCKET_NAME}"
        CONTROL_PLANE_COUINT=1
        NODE_COUNT=2
        ZONE="eu-north-1a"
        NODE_SIZE="t3.xlarge"
        AMI="ami-0ad8f0f72fd4dc1ac"
        NODES_SSH_CERT_PATH='/home/sshalit/certs/shlomi-final-project.pem'
        NEXUS_SERVER='http://13.50.194.17:5000'
    }

    agent {
        label 'ubuntu'
    }

    stages {
        stage('checkout') {
            steps {
                cleanWs()
                checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/shlomoshalit123/Infrastructure-Setup.git']])
            }
        }
        stage('Allow private registry') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'AWS-Credentials-IAM', passwordVariable: 'AWS_SECRET_ACCESS_KEY', usernameVariable: 'AWS_ACCESS_KEY_ID'), usernamePassword(credentialsId: 'nexus', passwordVariable: 'nexus_password', usernameVariable: 'nexus_user')]) {
                    sh '''
                    NODES_ID=$(aws autoscaling describe-auto-scaling-groups --query AutoScalingGroups[1].Instances[].InstanceId --output text)
                    NODES_IP=$(for ID in $NODES_ID; do      aws ec2 describe-instances --instance-ids $ID --query 'Reservations[*].Instances[*].PublicIpAddress' --output text; done)
                    for node_ip in $NODES_IP
                    do
                        ls -R
                        ssh -t -o StrictHostKeyChecking=no -i ${NODES_SSH_CERT_PATH} ubuntu@${node_ip} "sudo chown ubuntu:ubuntu /etc/containerd/config.toml"
                        scp -i ${NODES_SSH_CERT_PATH}  ./prod/aws-kops/config.toml ubuntu@${node_ip}:/etc/containerd
                        ssh -t -o StrictHostKeyChecking=no -i ${NODES_SSH_CERT_PATH} ubuntu@${node_ip} "sudo systemctl restart containerd"
                        ssh -t -o StrictHostKeyChecking=no -i ${NODES_SSH_CERT_PATH} ubuntu@${node_ip} "hostname"
                        ssh -t -o StrictHostKeyChecking=no -i ${NODES_SSH_CERT_PATH} ubuntu@${node_ip} "cat /etc/containerd/config.toml"
                    done
                    kubectl create secret docker-registry regcred --docker-server=${NEXUS_SERVER} --docker-username=${nexus_user} --docker-password=${nexus_password}
                    '''
                }
            }
        }   
    }
}
